#Rterm.exe --vanilla

library(Homo.sapiens) # the genomicsRanges functions below have malfunctioned and need to be fixed and re-run. as of 450am on 9/22/21, I am unable to install and run genomicRanges. Will have to try in a little while. 
 
# save(cnvs, pheno, phenoFam, XHMMcnv, GATKcnv, file = "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/CNVsFrom3AlgsAndPhenoAndPhenoFam.9.22.21.rda")  
load(file = "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/CNVsFrom3AlgsAndPhenoAndPhenoFam.9.22.21.rda") #### pay attention to this date!!! 9.20.21 has only 135 samples, 9.22.21 has 202
  
#################### #################### #################### #################### #################### #################### 
#
#################### #################### #################### #################### #################### #################### 

# include only deletions
delCalls <- subset(cnvs, cnvs$GATKcall.del_1.dup_2 ==1)
# remove redundant calls because of XHMM, but THIS TIME without removing non-blood relatives as above
remove <- vector()
for (i in 2:nrow(delCalls)){
    if (delCalls$subject[i] == delCalls$subject[i-1]){
        remove <- append(remove, i)
        cat("deleting row ", i, '\n')
    }
    } #nrow
delCalls <- delCalls[-remove,]
#see what we have here for genes
genesBothCallersAllDeletions <- unlist(strsplit(delCalls$gene, split = ", ")) 
# length(genesBothCallersAllDeletions)/length(unique(delCalls$sample))

# LILRA6 - freq of 63 in genesBothCallersAllDeletions; HLADRB5 has 73
# out of 135

# exclude individualls known to marry into LC families: (only 9 known to be married in with data available at this time)
# subset(phenoFam, phenoFam$CID==12) # married in 44 & 29
# subset(phenoFam[,c(4,14,15)], phenoFam$CID==33 ) # married in NONE
# subset(phenoFam[,c(4,14,15)], phenoFam$CID==35 ) # married in 29
# subset(phenoFam[,c(4,14,15)], phenoFam$CID==42 ) # married in NONE
# subset(phenoFam[,c(4,14,15)], phenoFam$CID==44 ) # married in NONE
# subset(phenoFam[,c(4,14,15)], phenoFam$CID==47 ) # married in 16
# subset(phenoFam[,c(4,14,15)], phenoFam$CID==59 ) # married in NONE
# subset(phenoFam[,c(4,14,15)], phenoFam$CID==102 ) # married in 346
# La familiws 52, 88, 90
# subset(phenoFam[,c(4,14,15)], phenoFam$CID==52 ) # married in 4, 13
# subset(phenoFam[,c(4,14,15)], phenoFam$CID==88 ) # married in 13, 52 #! take a look at offspring of 13 and 52 (married in, WES on all children but not spouse wherein 6/8 siblings have lung cancer 
# subset(phenoFam[,c(4,14,15)], phenoFam$CID==90 ) # married in NONE

marriedInSampleName <- phenoFam[phenoFam$CID == 12 & phenoFam$CIND == 44 | phenoFam$CID == 12 & phenoFam$CIND == 29 |
                       phenoFam$CID == 35 & phenoFam$CIND == 29| 
                       phenoFam$CID == 47 & phenoFam$CIND == 16|
                       phenoFam$CID == 102 & phenoFam$CIND == 346|
                       phenoFam$CID == 52 & phenoFam$CIND == 4| phenoFam$CID == 52 & phenoFam$CIND == 13|
                       phenoFam$CID == 88 & phenoFam$CIND == 13| phenoFam$CID == 88 & phenoFam$CIND == 52,1]
delCallsLCfamilies <- delCalls[-which(delCalls$sample %in% marriedInSampleName),]

delCallsLCfamiliesgeneIDs <- unlist(strsplit(delCallsLCfamilies$gene, split = ", ")) 

##### !!!!! consider removing the bottom quartile (or some meaningful quantile) of frequencies so it isn't so arbitrary
# limiting to those genes that are in greater than 5 individuals
freq <-table(delCallsLCfamiliesgeneIDs[delCallsLCfamiliesgeneIDs != "NA"]) 
genelistG5 <- as.data.frame(freq)[as.data.frame(freq)[,2]>5,]
colnames(genelistG5) <- c("gene", "Freq")

###!!!!!!!!!!!!!!!! do not do the next step!
# removing CNVs found in those who marry in:
# marriedInDeletions <- subset(cnvs, cnvs$sample %in% marriedInSampleName)
# marriedInDeletions <- unlist(strsplit(marriedInDeletions$gene, split = ", "))
# genelistG5noOverlap <- genelistG5[-which(genelistG5[,1] %in% marriedInDeletions),]
# genelistG5[which(genelistG5[,1] %in% marriedInDeletions),]

save(cnvs, phenoFam, marriedInSampleName, genesBothCallersAllDeletions, delCallsLCfamiliesgeneIDs, genelistG5, delCallsLCfamilies, file = "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/THISpoint69.4.15pm.9.22.21.rda")

# structure data.frame by gene so i can ID length(unique(CID)) > 3 and CIND > 2 per CID

cumgFamily <- data.frame() 
for (j in 1:length(genelistG5$gene)){    #j=1
      loc <- vector()
      for(i in 1:length(delCalls$gene)){
              if (genelistG5$gene[j] %in% strsplit(delCalls$gene, split = ", ")[[i]]){
              loc <- c(loc, i)}
                          
              } # i
      cat("working on ", genelistG5$gene[j], "\n")

# match sample in delCalls (cnvs with only dels) to sample in phenoFam: CID and CIND, "CF", "CM", "diagnosis.of.lung.throat.pharynx.larynx.cancer", "Age.at.Onset.1o.cancer"
      family <- delCalls[loc,1:4] 
      for(w in 1:length(family$sample)){    # w = 2
         family[w,"CID"] <- phenoFam[which(phenoFam$submitted.sample.id == family$sample[w]), "CID"]
         family[w,"CIND"] <- phenoFam[which(phenoFam$submitted.sample.id == family$sample[w]), "CIND"]
         family[w,"CF"] <- phenoFam[which(phenoFam$submitted.sample.id == family$sample[w]), "CF"]
         family[w,"CM"] <- phenoFam[which(phenoFam$submitted.sample.id == family$sample[w]), "CM"]
         family[w,"diagnosis.of.lung.throat.pharynx.larynx.cancer"] <- phenoFam[which(phenoFam$submitted.sample.id == family$sample[w]), "diagnosis.of.lung.throat.pharynx.larynx.cancer"]
         family[w,"Age.at.Onset.1o.cancer"] <- phenoFam[which(phenoFam$submitted.sample.id == family$sample[w]), "Age.at.Onset.1o.cancer"]
         } # w
   #label this information with the gene of interest
   family$gene <- genelistG5$gene[j]

cumgFamily <- rbind(cumgFamily, family)
}
### starting running this at 4:23p 9.22.21 - check that it saves output (next two lines) in OneDrive in a bit from home - then use the output to limit the genes to those with at least 3 CIDs and >1 CIND per CID
#save(cumgFamily, file = "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/cumgFamilyat4.23p.9.22.21.rda")
#write.table(cumgFamily, file= "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/cumgFamilyat4.23p.9.22.21.csv", row.names=FALSE, sep =",")

# load gnomAD SV data from csv that was manually created on 9/21/21 - this is now a different list of - old list and gnomAD SV data = file="C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/gnomADfindingsgenelistG5noOverlap-.csv"
gnomADgenelistG5noOverlap <- read.csv(file="C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/gnomADfindingsgenelistG5noOverlap-9.22.21.csv")

removedCommonVariants <- gnomADgenelistG5noOverlap[which(gnomADgenelistG5noOverlap$AF1 > 0.05),c(1,2)]

gnomADgenelistG5noOverlapUncommon <- subset(genelistG5noOverlap, gnomADgenelistG5noOverlap$AF1 < 0.05)

cumgFamily <- read.csv(file = "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/cumgFamilyat4.23p.9.22.21.csv")
# DO NOT DO THIS 9/22 the RDA file contains new data appended to end of old data. NEED to zero out the old object before running rbind to add new data. #load(file = "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/cumgFamilyat4.23p.9.22.21.rda")
# loop through genes listed in cumgFamily, for each create table row with:
# number of CIDs, next column: paste(CIDs, sep =", ")
# number of CIND per CID (paste(
# count of diagnosis.of.lung.throat.pharynx.larynx.cancer == TRUE
head(cumgFamily)

geneSummary <- as.data.frame(matrix(nrow=0, ncol=8))
colnames(geneSummary) <- c("gene", "#CIDs", "#CIDs.with.>2ind", "#CINDs", "#_affected", "#_unaffected", "mean_width", "#_unique_widths")

for(i in unique(cumgFamily$gene)){    #i = cumgFamily$gene[1]
     peeps <- subset(cumgFamily, cumgFamily$gene %in% i)
     k=0
     for(j in unique(peeps$CID)) {    #j=peeps$CID[1]
         if(length(which(peeps$CID %in% j))>1){ k=k+1 }
            } # j
     geneSummary <- rbind(geneSummary, data.frame(i, length(unique(peeps$CID)), 
                                         k, length(peeps$CIND), 
                                         length(which(peeps$diagnosis.of.lung.throat.pharynx.larynx.cancer)),
                                         length(which(peeps$diagnosis.of.lung.throat.pharynx.larynx.cancer==FALSE)),
                                         round(mean(peeps$width), 1), length(unique(peeps$width))))
     # this could be a great place to use a statistical test of association between Dx and cnv width, CID and CNV width, or                         
     
     cat(i, " has ",  length(unique(peeps$CID)), " CIDs and ", k, " families with > 2 CINDs with this CNV\n")   
     } # i
     colnames(geneSummary) <- c("gene", "#CIDs", "#CIDs.with.>2ind", "#CINDs", "#_affected", "#_unaffected", "mean_width", "#_unique_widths")
write.table(geneSummary, file= "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/statsByGene.9.23.21.csv", row.names=FALSE, sep =",")                                         
                                         



























































































# running list of gene lists prior to each screening step: 
# genesBothCallersAllDeletions (both callers, only deletions, no redundant XHMM cals; length(genesBothCallersAllDeletions) = 6341) --> 
# delCallsLCfamiliesgeneIDs (screened out non-blood relatives; length(delCallsLCfamiliesgeneIDs) = 6101) -->   
# genelistG5 (screened out genes held by fewer than 5 LC family members; length(genelistG5$gene) = 211) -->
# genelistG5noOverlap (screened out deletions also called in non-blood relatives) length(genelistG5noOverlap$gene) = 51 --> 
# gnomADgenelistG5noOverlapUncommon (screened out deletions with gnomAD AF > 0.05)

save(cnvs, phenoFam, marriedInSampleName, genesBothCallersAllDeletions, delCallsLCfamiliesgeneIDs, genelistG5, genelistG5noOverlap, 
gnomADgenelistG5noOverlap, gnomADgenelistG5noOverlapUncommon, removedCommonVariants, delCallsLCfamilies, file = "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/geneListProgressAndData.9.22.21.rda")


for (j in 1:length(gnomADgenelistG5noOverlapUncommon$gene)){    #j=1
      loc <- vector()
      for(i in 1:length(delCalls$gene)){
              if (gnomADgenelistG5noOverlapUncommon$gene[j] %in% strsplit(delCalls$gene, split = ", ")[[i]]){
              loc <- c(loc, i)}
                          
              } # i
      cat("working on ", gnomADgenelistG5noOverlapUncommon$gene[j], "\n")

# match sample in delCalls (cnvs with only dels) to sample in phenoFam: CID and CIND, "CF", "CM", "diagnosis.of.lung.throat.pharynx.larynx.cancer", "Age.at.Onset.1o.cancer"
      family <- delCalls[loc,1:4] 
      for(w in 1:length(family$sample)){    # w = 2
         family[w,"CID"] <- phenoFam[which(phenoFam$submitted.sample.id == family$sample[w]), "CID"]
         family[w,"CIND"] <- phenoFam[which(phenoFam$submitted.sample.id == family$sample[w]), "CIND"]
         family[w,"CF"] <- phenoFam[which(phenoFam$submitted.sample.id == family$sample[w]), "CF"]
         family[w,"CM"] <- phenoFam[which(phenoFam$submitted.sample.id == family$sample[w]), "CM"]
         family[w,"diagnosis.of.lung.throat.pharynx.larynx.cancer"] <- phenoFam[which(phenoFam$submitted.sample.id == family$sample[w]), "diagnosis.of.lung.throat.pharynx.larynx.cancer"]
         family[w,"Age.at.Onset.1o.cancer"] <- phenoFam[which(phenoFam$submitted.sample.id == family$sample[w]), "Age.at.Onset.1o.cancer"]
         } # w
   #label this information with the gene of interest
   family$gene <- gnomADgenelistG5noOverlapUncommon$gene[j]

cumgFamily <- rbind(cumgFamily, family)
}

save(cumgFamily, delCalls, gnomADgenelistG5noOverlapUncommon, cnvs, file = "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/cumgFamily.rda")
# write.table(cumgFamily, file= "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/cumgFamily.9.22.21.csv", row.names=FALSE, sep =",")

############################################################### quantiles ##################################################

above10thDecile <- freq.table[which(freq.table$Freq > quantile(freq.table$Freq, prob=.90)),]

above3rdQuartileFreq %>%
  kbl() %>%
  kable_styling(bootstrap_options = c("striped", full_width = F, position = "left"))
  
  above10thDecile %>%
  kbl() %>%
  kable_styling(bootstrap_options = c("striped", full_width = F, position = "left"))
  
########### find individuals with LILRA6 and HLA-DRB5
 loc <- vector()
      for(i in 1:length(delCalls$gene)){
              if ("HLA-DRB5" %in% strsplit(delCalls$gene, split = ", ")[[i]]){
              loc <- c(loc, i)}
                          
              } # i
      cat("working on ", gnomADgenelistG5noOverlapUncommon$gene[j], "\n")

# match sample in delCalls (cnvs with only dels) to sample in phenoFam: CID and CIND, "CF", "CM", "diagnosis.of.lung.throat.pharynx.larynx.cancer", "Age.at.Onset.1o.cancer"
     # length(unique(delCalls$sample[loc])) # 55 LILRA individuals, 19 families; mean(delCalls[loc, "query_width"]) = 3193.508; delCalls[loc, "sample"] families: 33, 62, 102 42 11 88 105,131 103 59 127 69 34 52 
                                           #    loc value for LILRA6   = 17   56   81   82  170  171  294  385  416  590  648  759  828  880  896 995 1030 1085 1102 1103 1235 1258 1259 1351 1366 1406 1474 1517 1639 1659 1685 1735 1752 1753 1862 1880 1881 1892 1919 1936 1956 1979 1980 2000 2020 2049 2072 2112 2136 2284 2333 2398 2422 2442 2460 2511 2578 2669 2689 2690 2710 2751 2783                                                                                                               
                                          # HLA-DRB5  #length(unique(delCalls$sample[loc])) = 64; mean(delCalls[loc, "query_width"]) = 6265.534; 

 
