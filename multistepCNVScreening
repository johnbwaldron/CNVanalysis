#Rterm.exe --vanilla
# source("https://raw.githubusercontent.com/johnbwaldron/genes/master/convertGenomicRangeToGeneName")
# look here for ideas: https://support.bioconductor.org/p/67118/

# load(file = "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/CNVsFrom3AlgsAndPhenoAndPhenoFam.2.19.2021.rda")
load(file = "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/CNVsFrom3AlgsAndPhenoAndPhenoFam.9.20.21.rda")

library(Homo.sapiens)
 
######## re-create overlaps between GATK and XHMM ONLY, inorder to add more information to the table and subset by del and those held in common

for(i in unique(GATKcnv$sample)){                      #i = GATKcnv$sample[1]
A <- FALSE
B <- FALSE
C <- FALSE

A <- makeGRangesFromDataFrame(subset(GATKcnv, GATKcnv$sample == i), keep.extra.columns=TRUE) 
if(any(XHMMcnv$sample == i)){
    B <- makeGRangesFromDataFrame(subset(XHMMcnv, XHMMcnv$sample == i), keep.extra.columns=TRUE)

    ABlaps <- findOverlaps(A, B)
    ABsect <- pintersect(A[queryHits(ABlaps)], B[subjectHits(ABlaps)])
    ##################################### GATK vs. XHMM CALLS TO SUBSET BY SAMPLE/INDIVIDUAL#####################################
    GATKandXHMM <- data.frame(sample = A$sample[queryHits(ABlaps)],
                chr = as.data.frame(A)$seqnames[queryHits(ABlaps)],
                GATKstart = as.data.frame(A)$start[queryHits(ABlaps)],
                GATKend = as.data.frame(A)$end[queryHits(ABlaps)],
                XHMMstart = as.data.frame(B)$start[subjectHits(ABlaps)],
                XHMMend = as.data.frame(B)$end[subjectHits(ABlaps)],
                query=queryHits(ABlaps), subject=subjectHits(ABlaps),
                olap_width=width(ABsect), 
                query_width=width(A)[queryHits(ABlaps)],
                GATKcall.del_1.dup_2 = as.data.frame(A)$del_1.dup_2[queryHits(ABlaps)],
                gene=A$gene[queryHits(ABlaps)])
                
    write.table(GATKandXHMM, file=paste("C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/callsInCommonGATKandXHMM/GATKandXHMM.", i, ".csv", sep=""), row.names=FALSE, sep=",") #quote=c(1:3)???
    } else {
        cat("no.olaps in ", i)
        GATKandXHMM <- data.frame(sample = i,
                chr = "no.olaps",
                GATKstart = "no.olaps",
                GATKend = "no.olaps",
                XHMMstart = "no.olaps",
                XHMMend = "no.olaps",
                query= "no.olaps",
                olap_width="no.olaps", 
                query_width="no.olaps",
                GATKcall.del_1.dup_2 = "no.olaps",
                gene="no.olaps")
        write.table(GATKandXHMM, file=paste("C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/callsInCommonGATKandXHMM/GATKandXHMM.", i, ".csv", sep=""), row.names=FALSE, sep=",")
                }

} # end of loop

############################################################
# step 2 in (https://naturarimor.blogspot.com/2021/09/screen-out-cnvs-by-steps-1-must-be.html)
############################################################################################3


# do not limit those match those genes found in those that phenoFam$diagnosis.of.lung.throat.pharynx.larynx.cancer == TRUE

#create one table with all shared CNV calls
cnvs <- matrix(nrow=0, ncol=12)
cnvs <- as.data.frame(cnvs)
colnames(cnvs) <- c("sample", "chr", "GATKstart", "GATKend", "XHMMstart", "XHMMend", "query", "subject", "olap_width", "query_width", "GATKcall.del_1.dup_2", "gene")

for(i in unique(GATKcnv$sample)){                      #i = GATKcnv$sample[1]
  
  GATKandXHMM <- read.csv(file = paste("C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/callsInCommonGATKandXHMM/GATKandXHMM.", i, ".csv", sep=""))
  
  cnvs <- rbind(cnvs, GATKandXHMM)
}

write.table(cnvs, file=paste("C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/compositeOfCNVsCalledByGATKandXHMM", ".csv", sep=""), row.names=FALSE, sep=",")

#cnvs <- read.csv(file="C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/compositeOfCNVsCalledByGATKandXHMM.csv")
# save(cnvs, pheno, phenoFam, XHMMcnv, GATKcnv, file = "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/CNVsFrom3AlgsAndPhenoAndPhenoFam.9.20.21.rda")  
# load(file = "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/CNVsFrom3AlgsAndPhenoAndPhenoFam.9.20.21.rda")
  
#################### #################### #################### #################### #################### #################### 
#count incidence of gene names given subset based on disease status
#################### #################### #################### #################### #################### #################### 
# load(file = "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/CNVsFrom3AlgsAndPhenoAndPhenoFam.9.20.21.rda")

# includ only deletions
delCalls <- subset(cnvs, cnvs$GATKcall.del_1.dup_2 ==1)

# exclude individualls known to marry into LC families: (only 9 known to be married in with data available at this time)
subset(phenoFam, phenoFam$CID==12) # married in 44 & 29
subset(phenoFam[,c(4,14,15)], phenoFam$CID==33 ) # married in NONE
subset(phenoFam[,c(4,14,15)], phenoFam$CID==35 ) # married in 29
subset(phenoFam[,c(4,14,15)], phenoFam$CID==42 ) # married in NONE
subset(phenoFam[,c(4,14,15)], phenoFam$CID==44 ) # married in NONE
subset(phenoFam[,c(4,14,15)], phenoFam$CID==47 ) # married in 16
subset(phenoFam[,c(4,14,15)], phenoFam$CID==59 ) # married in NONE
subset(phenoFam[,c(4,14,15)], phenoFam$CID==102 ) # married in 346
# La famileis 52, 88, 90
subset(phenoFam[,c(4,14,15)], phenoFam$CID==52 ) # married in 4, 13
subset(phenoFam[,c(4,14,15)], phenoFam$CID==88 ) # married in 13, 52 #! take a look at offspring of 13 and 52 (married in, WES on all children but not spouse wherein 6/8 siblings have lung cancer 
subset(phenoFam[,c(4,14,15)], phenoFam$CID==90 ) # married in NONE

marriedInSampleName <- phenoFam[phenoFam$CID == 12 & phenoFam$CIND == 44 | phenoFam$CID == 12 & phenoFam$CIND == 29 |
                       phenoFam$CID == 35 & phenoFam$CIND == 29| 
                       phenoFam$CID == 47 & phenoFam$CIND == 16|
                       phenoFam$CID == 102 & phenoFam$CIND == 346|
                       phenoFam$CID == 52 & phenoFam$CIND == 4| phenoFam$CID == 52 & phenoFam$CIND == 13|
                       phenoFam$CID == 88 & phenoFam$CIND == 13| phenoFam$CID == 88 & phenoFam$CIND == 52,1]
delCallsLCfamilies <- delCalls[-which(delCalls$sample %in% marriedInSampleName),]

## need to get rid of gene names repeated in a single individual because XHMM calls multiple for one more inclusive GATK call
# will do so by removing those where subject is not unique for each individual
remove <- vector()
for (i in 2:nrow(delCallsLCfamilies)){
    if (delCallsLCfamilies$subject[i] == delCallsLCfamilies$subject[i-1]){
        remove <- append(remove, i)
        cat("deleting row ", i, '\n')
    }
    } #nrow(delCallsLCfamilies) = 4797 --> nrow(delCallsLCfamilies) = 2723
delCallsLCfamilies <- delCallsLCfamilies[-remove,]

#list genes affected by mutations and freq in LC familes

delCallsLCfamiliesgeneIDs <- unlist(strsplit(delCallsLCfamilies$gene, split = ", ")) 

freq <- table(delCallsLCfamiliesgeneIDs[delCallsLCfamiliesgeneIDs != "NA"]) 

freqOfFreq <- as.data.frame(table(freq))
prop.table(freqOfFreq)

hist(as.data.frame(freq)[,2], main="Frequency of specific deletions within lung cancer families", 
     xlab = "number of individuals with specific deletion", ylab = "number of distinct genes affected by deletions", col = 4)
#hist(freqOfFreq, freq = T)
#hist(freq)

# limiting to those genes that are in greater than 5 individuals
genelistG5 <- as.data.frame(freq)[as.data.frame(freq)[,2]>5,]
colnames(genelistG5) <- c("gene", "Freq")

# removing CNVs found in those who marry in:
marriedInDeletions <- subset(cnvs, cnvs$sample == marriedInSampleName)
marriedInDeletions <- unlist(strsplit(marriedInDeletions$gene, split = ", "))

genelistG5noOverlap <- genelistG5[-which(genelistG5[,1] %in% marriedInDeletions),]
genelistG5[which(genelistG5[,1] %in% marriedInDeletions),]


write.table(genelistG5[which(genelistG5[,1] %in% marriedInDeletions),], file = "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/deletionsInMoreThan5individualsThatWereAlsoInNonBloodRelatives.csv", row.names=FALSE, sep=",")

genelistG5[which(genelistG5[,1] %in% marriedInDeletions),] %>%
  kbl() %>%
  kable_styling(bootstrap_options = c("bordered", full_width = FALSE, row_label_position = "c"))


hist(as.data.frame(genelistG5noOverlap)[,2], breaks = seq(5, 60, 5), main="Frequency of specific deletions within lung cancer families not found in non-blood relatives", 
     xlab = "number of individuals with specific deletion", ylab = "number of distinct genes affected by deletions", col = 3)


genelistG5noOverlap
write.table(genelistG5noOverlap, file = "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/genelistG5noOverlap.csv", row.names=FALSE, sep=",")

###############################################################



##### not sure what to make of gnomAD SV output based on gene name. I'd like to try to charcaterize the nature of the deletions first by calling up all the calls infor from cnvs that contian each gene in genelistG5noOverlap 

# which gene


# load gnomAD SV data from csv that was manually created on 9/21/21
gnomADgenelistG5noOverlap <- read.csv(file="C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/gnomADfindingsgenelistG5noOverlap-.csv")

removedCommonVariants <- gnomADgenelistG5noOverlap[which(gnomADgenelistG5noOverlap$gnomAD.deletion.AlleleFrequency > 0.05),c(1,2)]

gnomADgenelistG5noOverlapUncommon <- subset(genelistG5noOverlap, gnomADgenelistG5noOverlap$gnomAD.deletion.AlleleFrequency < 0.05)

# record of removedCommonVariants
# write.table(removedCommonVariants, file= "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/removedCommonVariants.csv", row.names=FALSE, sep =",")
# write.table(gnomADgenelistG5noOverlapUncommon, file= "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/gnomADgenelistG5noOverlapUncommon.csv", row.names=FALSE, sep =",")

# save(gnomADgenelistG5noOverlapUncommon, removedCommonVariants, file = "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/gnomADfindingsgenelistG5noOverlap.rda")
load(file = "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/gnomADfindingsgenelistG5noOverlap.rda")

# includ only deletions
delCalls <- subset(cnvs, cnvs$GATKcall.del_1.dup_2 ==1)

# remove redundant calls because of XHMM, but THIS TIME without removing non-blood relatives as above
remove <- vector()
for (i in 2:nrow(delCalls)){
    if (delCalls$subject[i] == delCalls$subject[i-1]){
        remove <- append(remove, i)
        cat("deleting row ", i, '\n')
    }
    } #nrow
delCalls <- delCalls[-remove,]

# IMPORTANTLY: THE STRUCTURE OF ORGANIZING THE CALLS THEN ADDING THE PHENO DATA CREATES MULTIPLE ROWS FOR THE SAME CIND; it has not falsely inflated the number of individuals with the given deletion.
# inititate data.frame for CUMmulative family data organized by gene (affected by deletion in both calling tools, not in nonblood relatives, with allele frequency > 0.05, in greater than 5 individuals
cumgFamily <- data.frame() # matrix()

for (j in 1:length(gnomADgenelistG5noOverlapUncommon$gene)){    #j=1
      loc <- vector()
      for(i in 1:length(delCalls$gene)){
              if (gnomADgenelistG5noOverlapUncommon$gene[j] %in% strsplit(delCalls$gene, split = ", ")[[i]]){
              loc <- c(loc, i)}
                          
              } # i
      cat("working on ", gnomADgenelistG5noOverlapUncommon$gene[j], "\n")

# match sample in delCalls (cnvs with only dels) to sample in phenoFam: CID and CIND, "CF", "CM", "diagnosis.of.lung.throat.pharynx.larynx.cancer", "Age.at.Onset.1o.cancer"
      family <- delCalls[loc,1:4] 
      for(w in 1:length(family$sample)){    # w = 2
         family[w,"CID"] <- phenoFam[which(phenoFam$submitted.sample.id == family$sample[w]), "CID"]
         family[w,"CIND"] <- phenoFam[which(phenoFam$submitted.sample.id == family$sample[w]), "CIND"]
         family[w,"CF"] <- phenoFam[which(phenoFam$submitted.sample.id == family$sample[w]), "CF"]
         family[w,"CM"] <- phenoFam[which(phenoFam$submitted.sample.id == family$sample[w]), "CM"]
         family[w,"diagnosis.of.lung.throat.pharynx.larynx.cancer"] <- phenoFam[which(phenoFam$submitted.sample.id == family$sample[w]), "diagnosis.of.lung.throat.pharynx.larynx.cancer"]
         family[w,"Age.at.Onset.1o.cancer"] <- phenoFam[which(phenoFam$submitted.sample.id == family$sample[w]), "Age.at.Onset.1o.cancer"]
         } # w
   #label this information with the gene of interest
   family$gene <- gnomADgenelistG5noOverlapUncommon$gene[j]

cumgFamily <- rbind(cumgFamily, family)
}

save(cumgFamily, delCalls, gnomADgenelistG5noOverlapUncommon, cnvs, file = "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/cumgFamily.rda")
# write.table(cumgFamily, file= "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/cumgFamily.csv", row.names=FALSE, sep =",")

############################################################### things that haven't worked out yet ##################################################
# display
 library(kableExtra)
 # install.packages("kableExtra")
 library(ggplot2)
 library(magrittr)
 library(dplyr)

mybinwidth <- 10
ggplot(as.data.frame(freq), aes(Freq)) +        # Draw ggplot2 plot with hist & density
  geom_histogram(alpha = 0.5) +
  geom_density(aes(y = ..density.. * (nrow(Freq) * mybinwidth)), col = 2))
freq.table <- as.data.frame(freq)

freq %>%
  kbl() %>%
  kable_styling(bootstrap_options = c("striped", full_width = F, position = "left"))

write.table(freq, file= "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/LCfamiliesOnlyDelsCalledbyXHMMandGATK.csv", row.names=FALSE, sep =",")
write.table(freqOfFreq, file= "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/freqOfGenesLCfamiliesOnlyDelsCalledbyXHMMandGATK.csv", row.names=FALSE, sep =",")


# display above 3rd quartile and 9th decile
freq.table$percentDelInLCfamilies <- round((freq.table$Freq/length(unique(delCallsLCfamilies$sample)))*100, digits=1)
above3rdQuartileFreq <- freq.table[which(freq.table$Freq > quantile(freq.table$Freq, prob=.75)),]

above10thDecile <- freq.table[which(freq.table$Freq > quantile(freq.table$Freq, prob=.90)),]

mean(freq)
[1] 6.729017
 median(freq)
[1] 3


above3rdQuartileFreq %>%
  kbl() %>%
  kable_styling(bootstrap_options = c("striped", full_width = F, position = "left"))
  
  above10thDecile %>%
  kbl() %>%
  kable_styling(bootstrap_options = c("striped", full_width = F, position = "left"))
  



####################################################################################################
# subset of those with airway cancer diagnosis -- not really useful at this time
phenotypeD <- subset(cnvs, cnvs$sample %in% phenoFam$submitted.sample.id[which(phenoFam$diagnosis.of.lung.throat.pharynx.larynx.cancer == TRUE)])
#################### double check subset function ## phenoFam$diagnosis.of.lung.throat.pharynx.larynx.cancer[which(phenoFam$submitted.sample.id %in% phenotypeD$sample)]
phenotypeDdel <- subset(phenotypeD, phenotypeD$GATKcall.del_1.dup_2 == 1) #nrow(phenotypeDdel)= 811
#################### double check subset function ## phenoFam$diagnosis.of.lung.throat.pharynx.larynx.cancer[which(phenoFam$submitted.sample.id %in% phenotype$sample)]
####################################################################################################
#################### subset cnvs for those without cancer diagnosis ####################
####################################################################################################
noDiseasePhenotype <- subset(cnvs, cnvs$sample %in% phenoFam$submitted.sample.id[which(phenoFam$diagnosis.of.lung.throat.pharynx.larynx.cancer == FALSE)])

remove <- vector()
for (i in 2:nrow(noDiseasePhenotype)){
    if (noDiseasePhenotype$subject[i] == noDiseasePhenotype$subject[i-1]){
        remove <- append(remove, i)
        cat("deleting row ", i, '\n')
    }
    } #nrow(noDiseasePhenotype) = 6194 --> nrow(noDiseasePhenotype) = 3852
noDiseasePhenotype <- noDiseasePhenotype[-remove,]

# subset to only deletions:
noDiseasePhenotypedel <- subset(noDiseasePhenotype, noDiseasePhenotype$GATKcall.del_1.dup_2 == 1)
####################################################################################################

LCgeneIDs <- unlist(strsplit(phenotypeDdel$gene, split = ", ")) 

geneIDs <- unlist(strsplit(noDiseasePhenotypedel$gene, split = ", ")) 

freq <- table(geneIDs, exclude = "NA") 
LCfreq <- table(LCgeneIDs, exclude = "NA")
 
plot(freq, type="h")
 
 README <- "tables and data created in CNVanalysis/multistepCNVScreening. phenotypeD is subset of cnvs with airway Ca dx. 
 phenotypeDdel is subset of phenotypeD including only GATK calls for deletion. LCfreq is call to table on unlisted gene 
 names inlcuded in phenotypeDdel. noDiseasePhenotype and noDiseasePhenotypedel are subsets of cnv that include CINDs with no
 Ca Dx and only those with deletions, respectively. freq is call to table of unlisted gene names included in noDiseasePhenotypedel."
 
 save(README, cnvs, pheno, phenoFam, XHMMcnv, GATKcnv, phenotypeD, phenotypeDdel, noDiseasePhenotype, noDiseasePhenotypedel, freq, LCfreq, file = "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/deletionsGeneFreqTables.9.20.21.rda")  
 # load(file = "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/deletionsGeneFreqTables.9.20.21.rda")
 
 
 #genes in > 10
 
 kableExtra and ggplot2 packages. In the code chunk labelled packages, include the library()
 
 
