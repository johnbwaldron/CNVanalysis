#Rterm.exe --vanilla

# load(file = "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/CNVsFrom3AlgsAndPhenoAndPhenoFam.2.19.2021.rda")
# load(file = "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/CNVsFrom3AlgsAndPhenoAndPhenoFam.9.20.21.rda")
 # load(file = "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/deletionsGeneFreqTables.9.20.21.rda")
 # !!!!!!!!!!!! Note issue above: incomplete cnvs used previously: adding corrected data froam with load below (today is 9/23/21)
 
 load(file = "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/CNVsFrom3AlgsAndPhenoAndPhenoFam.9.22.21.rda") #### pay attention to this date!!! 9.20.21 has only 135 samples, 9.22.21 has 202
# only at home PC: load(file = "C:/Users/4wald/OneDrive - LSUHSC/GELCC/CNVsFrom3AlgsAndPhenoAndPhenoFam.9.22.21.rda") #### pay attention to this date!!! 9.20.21 has only 135 samples, 9.22.21 has 202

 
library(Homo.sapiens)

 
 library(kableExtra)
 # install.packages("kableExtra")
 library(ggplot2)
 library(magrittr)
 library(dplyr)
 
  ### dplyr::summarise(), dplyr::group_by(), dplyr::select(), dplyr::filter(), and dplyr::mutate()

quantile(freq, prob=c(.25,.5,.75))

########################################################################################################################################
##### match phenoFam bam file name for example IGB image
#### "1dcdea9c62584830a6a854cbd1db149e.bam"
# subset(cnvs, cnvs$sample==phenoFam[phenoFam[,2] == "1dcdea9c62584830a6a854cbd1db149e.bam",1] & cnvs$GATKcall.del_1.dup_2 == 1)
# GSTM1
# i can;t make a pretty picture without the index files...blast!
########################################################################################################################################
# list married in unaffected CINDs and their deletions

subset(phenoFam, phenoFam$CID==12) # married in 44 & 29
subset(phenoFam[,c(4,14,15)], phenoFam$CID==33 ) # married in NONE
subset(phenoFam[,c(4,14,15)], phenoFam$CID==35 ) # married in 29
subset(phenoFam[,c(4,14,15)], phenoFam$CID==42 ) # married in NONE
subset(phenoFam[,c(4,14,15)], phenoFam$CID==44 ) # married in NONE
subset(phenoFam[,c(4,14,15)], phenoFam$CID==47 ) # married in 16
subset(phenoFam[,c(4,14,15)], phenoFam$CID==59 ) # married in NONE
subset(phenoFam[,c(4,14,15)], phenoFam$CID==102 ) # married in 346
# La famileis 52, 88, 90
subset(phenoFam[,c(4,14,15)], phenoFam$CID==52 ) # married in 4, 13
subset(phenoFam[,c(4,14,15)], phenoFam$CID==88 ) # married in 13, 52 
#! take a look at offspring of 13 and 52 (married in, WES on all children but not spouse wherein 6/8 siblings have lung cancer 

# subset cnvs called by both tools, only deletions, only affected:
LCgeneIDs <- unlist(strsplit(phenotypeDdel$gene, split = ", ")) 

#subset cnvs called by both tools, only deletions, only married into the families
marriedInsampleName <- phenoFam[phenoFam$CID == 12 & phenoFam$CIND == 44 | phenoFam$CID == 12 & phenoFam$CIND == 29 |
                       phenoFam$CID == 35 & phenoFam$CIND == 29| 
                       phenoFam$CID == 47 & phenoFam$CIND == 16|
                       phenoFam$CID == 102 & phenoFam$CIND == 346|
                       phenoFam$CID == 52 & phenoFam$CIND == 4| phenoFam$CID == 52 & phenoFam$CIND == 13|
                       phenoFam$CID == 88 & phenoFam$CIND == 13| phenoFam$CID == 88 & phenoFam$CIND == 52,1]
marriedIn <- subset(cnvs, cnvs$GATKcall.del_1.dup_2 == 1 & cnvs$sample %in% marriedInsampleName) 
outGrpGenes <- unlist(strsplit(marriedIn$gene, split = ", "))


################### 9/23/21 OR and CI#####################
# affected and unaffected:
length(which(phenoFam$diagnosis.of.lung.throat.pharynx.larynx.cancer)) #= 60
length(unique(phenoFam$submitted.sample.id)) #= 204
length(unique(cnvs$sample) #= 202
samplesInCnvs <- subset(phenoFam, phenoFam$submitted.sample.id %in% unique(cnvs$sample))

length(which(samplesInCnvs$diagnosis.of.lung.throat.pharynx.larynx.cancer)) #60
length(which(samplesInCnvs$diagnosis.of.lung.throat.pharynx.larynx.cancer==FALSE)) # 142

# must first remove redundant and duplication calls
onlyDels <- subset(cnvs, cnvs$GATKcall.del_1.dup_2 ==1)

# remove redundant calls because of XHMM
remove <- vector()
for (i in 2:nrow(onlyDels)){
    if (onlyDels$subject[i] == onlyDels$subject[i-1]){
        remove <- append(remove, i)
        cat("deleting row ", i, '\n')
    }
    } #nrow
onlyDelsNoRedundant <- onlyDels[-remove,]


diseasePhenotypeOnlyDels <- subset(onlyDelsNoRedundant, onlyDelsNoRedundant[,1] %in% phenoFam[which(phenoFam$diagnosis.of.lung.throat.pharynx.larynx.cancer),1])

##### list of genes found in affected (uniqueDiseaseGeneIDs) and in unaffected individuals
# for OR, we do not want just a list of unique names, but need to know how many individuals have them affected
# uniqueDiseaseGeneIDs <- unique(unlist(strsplit(diseasePhenotypeOnlyDels$gene, split = ", "))) # length(uniqueDiseaseGeneIDs)

# need to create allDisease for all individuals with cancer diagnosis, even if they don't have any overlapping deletions
allDisease <- subset(cnvs, cnvs$sample %in% phenoFam[which(phenoFam$diagnosis.of.lung.throat.pharynx.larynx.cancer),1]) # length(unique(allDisease$sample)) = 60

NODisease <- subset(cnvs, cnvs$sample %in% phenoFam[which(phenoFam$diagnosis.of.lung.throat.pharynx.larynx.cancer == FALSE),1]) # length(unique(NODisease$sample)) = 142

diseaseGeneIDs <- unlist(strsplit(diseasePhenotypeOnlyDels$gene, split = ", ")) # length(diseaseGeneIDs) #length(diseaseGeneIDs) = 1870

# must list all genes in all undiagnosed individuals
healthyPhenotypeOnlyDels <- subset(onlyDelsNoRedundant, onlyDelsNoRedundant[,1] %in% phenoFam[which(phenoFam$diagnosis.of.lung.throat.pharynx.larynx.cancer == FALSE),1])
# must remove NAs
healthyGeneIDs <- unlist(strsplit(healthyPhenotypeOnlyDels$gene, split = ", ")) # length(healthyGeneIDs) = 4471

listALLuniqueGenes <- unique(unlist(strsplit(cnvs$gene, split = ", "))) # length(listALLuniqueGenes) # length(listALLuniqueGenes) = 2257

################### 95% CI for odds ratio###############
#install.packages("epitools")
library(epitools)

# setting up matrix for oddsratio()
treatments <- c("without.gene", "with.gene")
LC_present <- c("No", "Yes")

OR <- data.frame(gene=listALLgenes, odds.affected = NA, odds.unaffected = NA,
                 odds.ratio = NA, CI.lower = NA, CI.upper = NA, OR.check= NA)

for(j in 1:length(OR$gene)){  # j = 1570
     i <- OR$gene[j]
       if(is.na(i)==FALSE & i != "NA"){  #cat("ye\n")
       # odds.affected = how many in affected / how many affected inds. without the gene (diseasePhenotypeOnlyDels 
       howManyAffectedWithGene <- length(which(diseaseGeneIDs == i))
       AffectedWithOUTGene <- length(unique(allDisease$sample)) - howManyAffectedWithGene
     OR[j,2] <- howManyAffectedWithGene / AffectedWithOUTGene
     
       howManyHealthyWithGene <- length(which(healthyGeneIDs == i))
       healthyWithOUTGene <- length(unique(NODisease$sample)) - howManyHealthyWithGene
     OR[j,3] <- howManyHealthyWithGene / healthyWithOUTGene
     
     OR[j,4] <- OR$odds.affected[j]/OR$odds.unaffected[j]
    
       dat <- matrix(c(healthyWithOUTGene, AffectedWithOUTGene, howManyHealthyWithGene, howManyAffectedWithGene), nrow = 2, ncol = 2, byrow = TRUE)
         dimnames(dat) <- list("Treatments" = treatments, "Disease" = LC_present)
         odds.ratio <- oddsratio.wald(dat) 

    #double check with epitools + CI
     OR[j,5] <- odds.ratio$measure[2,2]
     OR[j,6] <- odds.ratio$measure[2,3]
     #OR[j,7] <- odds.ratio$measure[2,1] # can remove this column once I am confident that both methods calculate as intended
      } # if NA
    } # j

OR[which(OR[,5]>1),]
#protective?
OR[which(OR[,6]<1),]

#write.table(OR, file= "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/OddsRatioByGene.9.23.21.csv", row.names=FALSE, sep =",")

#write.table(OR[which(OR[,5]>1),], file= "C:/Users/4wald/OneDrive - LSUHSC/GELCC/SIGNIFICANTOddsRatioByGene.9.23.21.csv", row.names=FALSE, sep =",")


######### below: as completed prior to 9/23/21 (probably using cnvs with 135 instead of 202 samples
listALLgenes <- unique(unlist(strsplit(cnvs$gene, split = ", ")))

OR <- data.frame(gene=listALLgenes)

for(j in 1:length(OR$gene)){  # j = 74
     i <- listALLgenes[j]
     OR$odds.affected[j] <- (length(which(LCgeneIDs == i)))/(length(unique(phenotypeDdel$sample))-length(which(LCgeneIDs == i)))
     OR$odds.marriedIn[j] <- length(which(outGrpGenes == i))/(length(marriedInsampleName)-length(which(outGrpGenes == i)))
     OR$odds.ratio[j] <- OR$odds.affected[j]/OR$odds.marriedIn[j]
     }
   
 # when dealing with such a small number of individuals as in the loop above, the exposure (gene presence) is often going to be zero which creates an undefeined Odds Ratio
 # below I include all undiagnosed individuals
 
   noDisGenes <- unlist(strsplit(noDiseasePhenotypedel$gene, split = ", "))
  OR <- data.frame(gene=listALLgenes) 
for(j in 1:length(listALLgenes)){  # j = 74
     i <- listALLgenes[j]
     OR$odds.affected[j] <- (length(which(LCgeneIDs == i)))/(length(unique(phenotypeDdel$sample))-length(which(LCgeneIDs == i)))
     OR$odds.unaffected[j] <- length(which(noDisGenes == i))/(length(unique(noDiseasePhenotypedel$sample))-length(which(noDisGenes == i)))
     OR$odds.ratio[j] <- OR$odds.affected[j]/OR$odds.unaffected[j]
     }     
 
 OR[which(OR[,3]>.5),]
 
#write.table(OR, file = "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/oddsRatioForEveryGeneInDelByGATKAndXHMMofAffectedOverAllUnaffected.csv", row.names=FALSE, sep=",")
#write.table(OR[which(OR[,3]>.5),], file = "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/oddsRatioForEveryGeneInDelByGATKAndXHMMofAffectedOverAllUnaffectedGreaterThan50percent.csv", row.names=FALSE, sep=",")

 
for each unique gene ID:
odds of exposure in affected <- phenotypeDdel
odds of exposure in married into the family (see boave) <- 

