#Rterm.exe --vanilla
 
# objects in save file below: cnvs, phenoFam, marriedInSampleName, genesBothCallersAllDeletions, delCallsLCfamiliesgeneIDs, genelistG5, genelistG5noOverlap, gnomADgenelistG5noOverlap, gnomADgenelistG5noOverlapUncommon, removedCommonVariants, delCallsLCfamilies, 
# load(file = "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/geneListProgressAndData.9.22.21.rda")
# cumgFamily <- read.csv(file= "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/cumgFamily.9.22.21.csv")

# running list of gene lists prior to each screening step: 
# genesBothCallersAllDeletions (both callers, only deletions, no redundant XHMM cals; length(genesBothCallersAllDeletions) = 6341) --> 
# delCallsLCfamiliesgeneIDs (screened out non-blood relatives; length(delCallsLCfamiliesgeneIDs) = 6101) -->   
# genelistG5 (screened out genes held by fewer than 5 LC family members; length(genelistG5$gene) = 211) -->
# genelistG5noOverlap (screened out deletions also called in non-blood relatives) length(genelistG5noOverlap$gene) = 51 --> 
# gnomADgenelistG5noOverlapUncommon (screened out deletions with gnomAD AF > 0.05)

#(require) #  load(file="C:/Users/4wald/OneDrive - LSUHSC/GELCC/9.30.21.upToAllDataOrganizedByGene.rda") or # load(file="C:/Users/4wald/OneDrive - LSUHSC/GELCC/9.30.21.callsPhenoRemovedRedundant.rda")

*1* genesBothCallersAllDeletions <- unlist(strsplit(overlappingCNVsPostRemoved$XHMMgene, split = ", ")) # length(genesBothCallersAllDeletions) = 8070 
  # # load(file="C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/10.18.21.delCallsLCfamilies.rda")
*2* delCallsLCfamiliesgeneIDs <- unlist(strsplit(delCallsLCfamilies$XHMMgene, split = ", ")) # length(delCallsLCfamiliesgeneIDs) = 7499
    # load(file = "C:/Users/4wald/OneDrive - LSUHSC/GELCC/overlappingCNVsWgnomAD.10.13.21.rda") # overlappingCNVsWgnomAD
    delBothCallsLCfamiliesUncommon <- overlappingCNVsWgnomAD[-which(overlappingCNVsWgnomAD$allele_frequency > 0.05),] #
*3* delBothCallsLCfamiliesUncommonGeneIDs <- unlist(strsplit(delBothCallsLCfamiliesUncommon$XHMMgene, split = ", ")) # length(delBothCallsLCfamiliesUncommonGeneIDs) =6578
    allGenesInG2CIND <- read.csv(file= "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/10.13.21.allGenesInG2CIND.csv")
*4* allGenesInG2CIND$gene # length(allGenesInG2CIND$gene) = 5976
    G2FamiliesWithG2per <- read.csv(file= "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/G2FamiliesWithG2per.10.13.21.csv")
*5* G2FamiliesWithG2pergeneFrequency <- data.frame(gene = G2FamiliesWithG2per$gene, Freq = G2FamiliesWithG2per$numCINDs)

freq1 <- table(genesBothCallersAllDeletions[genesBothCallersAllDeletions != "NA"])
#?freq1 <- proportions()
freq1.1 <- as.data.frame(freq1)
freq1.1[,3] <- "Deletions from Both Callers"
colnames(freq1.1 ) <- c("gene", "Freq", "Group")
dens1 <- density(freq1.1$Freq,  kernel = c("gaussian", "epanechnikov", "rectangular", "triangular", "biweight", "cosine", "optcosine")[1])

freq2 <- table(delCallsLCfamiliesgeneIDs[delCallsLCfamiliesgeneIDs != "NA"]) 
freq2.1 <- as.data.frame(freq2)
freq2.1[,3] <- "Exluding Married-Ins"
colnames(freq2.1 ) <- c("gene", "Freq", "Group")
dens2 <- density(freq2.1$Freq,  kernel = c("gaussian", "epanechnikov", "rectangular", "triangular", "biweight", "cosine", "optcosine")[1])


freq3 <- table(delBothCallsLCfamiliesUncommonGeneIDs[delBothCallsLCfamiliesUncommonGeneIDs != "NA"])
freq3.1 <- as.data.frame(freq3)
freq3.1[,3] <- "gnomAD AF < 0.05"
colnames(freq3.1) <- c("gene", "Freq", "Group")
dens3 <- density(freq3.1$Freq,  kernel = c("gaussian", "epanechnikov", "rectangular", "triangular", "biweight", "cosine", "optcosine")[1])


freq4 <- table(allGenesInG2CIND$gene[allGenesInG2CIND$gene != "NA"])
freq4.1 <- as.data.frame(freq4)
freq4.1[,3] <- "Greater than 2 Indidivuduals"
colnames(freq4.1) <- c("gene", "Freq", "Group")
dens4 <- density(freq4.1$Freq,  kernel = c("gaussian", "epanechnikov", "rectangular", "triangular", "biweight", "cosine", "optcosine")[1])


freq5 <- G2FamiliesWithG2pergeneFrequency
freq5[,3] <- "Greater than 2 Families with 2 per Family"
colnames(freq5) <- c("gene", "Freq", "Group")
dens5 <- density(freq5$Freq,  kernel = c("gaussian", "epanechnikov", "rectangular", "triangular", "biweight", "cosine", "optcosine")[1])

df <- rbind(freq1.1, freq2.1, freq3.1, freq4.1, freq5)

# install.packages("car")
library(car)

png(file = "C:/Users/jwaldr/OneDrive - LSUHSC/GELCC/densityByFilterStep.png")
    plot(dens1, main = "Density of per gene calls for each filter step", col = 1,
     xlim = c(1, 60))
    lines(dens2, col = 2) 
    lines(dens3, col = 3)
    lines(dens4, col = 4) 
    lines(dens5, col = 5)
    legend("topright", legend = c("Deletions from Both Callers", 
                                 "Exluding Married-Ins",
                                 "gnomAD AF < 0.05",
                                 "Greater than 2 Indidivuduals",
                                 "Greater than 2 Families with 2 per Family"),
                                  lty = 1, col = 1:5)
dev.off()       
###############################################################################
#install.packages("palmerpenguins") # https://r-charts.com/distribution/density-comparison-chart/
library(palmerpenguins)


###library(ggplot2)
ggplot(df, aes(x = Freq, fill = Group)) + 
  geom_histogram()

hist(df, main="Frequency of specific deletions within lung cancer families", 
     xlab = "number of individuals with specific deletion", ylab = "number of distinct genes affected by deletions", col = 4)
     
     
     In order to create a histogram by group in ggplot2 you will need to input the numerical and the categorical variable inside aes and use geom_histogram as follows.
